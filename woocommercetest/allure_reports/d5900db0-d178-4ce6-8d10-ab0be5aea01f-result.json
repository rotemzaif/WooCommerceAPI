{"name": "test_create_paid_order_single_product_guest_user", "status": "broken", "statusDetails": {"message": "Exception: The DB credentials 'DB_USER' and 'DB_PASSWORD' must be in env variable", "trace": "@pytest.fixture(scope=\"module\")\n    def orders_setup():\n        # get a random product from the db\n>       rand_product = ProductsDAO().get_a_random_product_from_db(1)[0]\n\ntests\\orders\\test_create_order_smoke.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\dao\\products_dao.py:8: in __init__\n    self.db_obj = DBUtility()\nsrc\\utilities\\dbUtility.py:11: in __init__\n    self.creds = CredentialsUtility().get_db_credentials()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @staticmethod\n    def get_db_credentials():\n        db_user = os.environ.get('DB_USER')\n        db_password = os.environ.get('DB_PASSWORD')\n        if not db_user or not db_password:\n>           raise Exception(\"The DB credentials 'DB_USER' and 'DB_PASSWORD' must be in env variable\")\nE           Exception: The DB credentials 'DB_USER' and 'DB_PASSWORD' must be in env variable\n\nsrc\\utilities\\credentialsUtility.py:22: Exception"}, "start": 1685438324828, "stop": 1685438324828, "uuid": "9851a76b-99b7-4bd6-b2d8-b0db9d48c1c2", "historyId": "548bf232226d871dcd7ffa5ac0be4173", "testCaseId": "548bf232226d871dcd7ffa5ac0be4173", "fullName": "tests.orders.test_create_order_smoke#test_create_paid_order_single_product_guest_user", "labels": [{"name": "tag", "value": "tcid48"}, {"name": "tag", "value": "orders"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.orders"}, {"name": "suite", "value": "test_create_order_smoke"}, {"name": "host", "value": "Rotem"}, {"name": "thread", "value": "3108-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.orders.test_create_order_smoke"}]}